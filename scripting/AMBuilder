# vim: set ts=8 sts=2 sw=2 tw=99 et ft=python: 
import os

files = [
'rune_ammo.sp',
'rune_assault.sp',
'rune_awareness.sp',
'rune_berserker.sp',
'rune_chooser.sp',
'rune_engineer.sp',
'rune_help.sp',
'rune_info.sp',
'rune_kit.sp',
'rune_plugin_updater.sp',
'rune_pounce.sp',
'rune_powerplay.sp',
'rune_rage.sp',
'rune_recall.sp',
'rune_redirect.sp',
'rune_repulsion.sp',
'rune_rocket.sp',
'rune_speed.sp',
'rune_updater.sp',
'rune_vote.sp',
'spawn_gen.sp',
'spawn_test.sp',
]

spcomp_argv = [
  os.path.join(builder.buildPath, SM.spcomp.binary.path),
  'SM_GENERATED_BUILD=',
  '-i' + os.path.relpath(os.path.join(builder.buildPath, 'includes'),
                         os.path.join(builder.buildPath, builder.buildFolder)),
  '-i' + os.path.relpath(os.path.join(builder.sourcePath, 'plugins', 'include'),
                         os.path.join(builder.buildPath, builder.buildFolder)),
  '-h',
]

def build_plugin(script_path, smx_file):
  inputs = [
    SM.spcomp.binary,
    script_path,
  ]
  outputs = [
    smx_file
  ]
  argv = spcomp_argv + [script_path]
  cmd_entry, (smx_entry,) = builder.AddCommand(
    inputs = inputs,
    argv = argv,
    outputs = outputs,
    dep_type = 'msvc',
    weak_inputs = SM.generated_headers
  )
  SM.smx_files[smx_file] = smx_entry

for script_file in files:
  script_path = os.path.join(builder.currentSourcePath, script_file)
  smx_file = os.path.splitext(script_file)[0] + '.smx'
  build_plugin(script_path, smx_file)

# This one has to be special.
#build_plugin(os.path.join(builder.currentSourcePath, 'admin-flatfile', 'admin-flatfile.sp'),
#             'admin-flatfile.smx')
